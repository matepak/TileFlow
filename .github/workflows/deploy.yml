<<<<<<< HEAD
name: Deploy to CyberFolks
=======
name: Deploy to CyberFolks via FTPS
>>>>>>> 2a868df12a1d9c37a5a2e6cc9315df9227907745

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        continue-on-error: true
        
      - name: Build project
        run: npm run build
<<<<<<< HEAD

      # ===== OPTION 1: SFTP DEPLOYMENT (RECOMMENDED) =====
      - name: Install OpenSSH client
        run: sudo apt-get install -y openssh-client
        
      - name: Deploy via SFTP
=======
        
      - name: Install lftp
        run: sudo apt-get install -y lftp
        
      - name: Deploy via FTPS
>>>>>>> 2a868df12a1d9c37a5a2e6cc9315df9227907745
        env:
          FTP_USERNAME: ${{ secrets.CYBERFOLKS_FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.CYBERFOLKS_FTP_PASSWORD }}
          FTP_SERVER: s113.cyber-folks.pl
          REMOTE_DIR: /domains/webgrove.pl/public_html/apps/tiling_img/
        run: |
<<<<<<< HEAD
          # Create SFTP batch file
          echo "# SFTP batch commands" > sftp_batch.txt
          echo "mkdir -p ${REMOTE_DIR}" >> sftp_batch.txt
          echo "cd ${REMOTE_DIR}" >> sftp_batch.txt
          echo "put -r ./build/* ." >> sftp_batch.txt
          echo "ls -la" >> sftp_batch.txt
          echo "bye" >> sftp_batch.txt
          
          # Using expect to handle password input
          expect << EOF
          spawn sftp -P 222 -o StrictHostKeyChecking=no -b sftp_batch.txt ${FTP_USERNAME}@${FTP_SERVER}
          expect "password:"
          send "${FTP_PASSWORD}\n"
          expect eof
          EOF
          
          # Clean up
          rm -f sftp_batch.txt
        continue-on-error: true

      # ===== OPTION 2: ALTERNATIVE SFTP DEPLOYMENT =====
      - name: Install sshpass for alternative SFTP method
        if: ${{ failure() }}
        run: sudo apt-get install -y sshpass
        
      - name: Alternative SFTP Deploy
        if: ${{ failure() }}
        env:
          FTP_USERNAME: ${{ secrets.CYBERFOLKS_FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.CYBERFOLKS_FTP_PASSWORD }}
          FTP_SERVER: s113.cyber-folks.pl
          REMOTE_DIR: /domains/webgrove.pl/public_html/apps/tiling_img/
        run: |
          # Create SFTP batch file
          echo "# SFTP batch commands" > sftp_batch.txt
          echo "mkdir -p ${REMOTE_DIR}" >> sftp_batch.txt
          echo "cd ${REMOTE_DIR}" >> sftp_batch.txt
          echo "put -r ./build/* ." >> sftp_batch.txt
          echo "ls -la" >> sftp_batch.txt
          echo "bye" >> sftp_batch.txt
          
          # Try with sshpass
          sshpass -p "${FTP_PASSWORD}" sftp -P 222 -o StrictHostKeyChecking=no -b sftp_batch.txt ${FTP_USERNAME}@${FTP_SERVER}
          
          # Clean up
          rm -f sftp_batch.txt
        continue-on-error: true

      # ===== OPTION 3: FTPS DEPLOYMENT WITH SPECIFIC SETTINGS =====
      - name: Install lftp for FTPS
        if: ${{ failure() }}
        run: sudo apt-get install -y lftp
        
      - name: Try FTPS Deploy
        if: ${{ failure() }}
        env:
          FTP_USERNAME: ${{ secrets.CYBERFOLKS_FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.CYBERFOLKS_FTP_PASSWORD }}
          FTP_SERVER: s113.cyber-folks.pl
          REMOTE_DIR: /domains/webgrove.pl/public_html/apps/tiling_img/
        run: |
          # Create FTPS script
          cat > ftps_script.txt << EOF
          # Disable HOST command
          set ftp:use-host no
          set ftp:use-feat no
          
          # Enable TLS
=======
          # Create a .netrc file for authentication
          echo "machine ${FTP_SERVER}" > ~/.netrc
          echo "login ${FTP_USERNAME}" >> ~/.netrc
          echo "password ${FTP_PASSWORD}" >> ~/.netrc
          chmod 600 ~/.netrc
          
          # Try different connection method (using direct lftp command)
          lftp -d -e "
          # TLS settings
>>>>>>> 2a868df12a1d9c37a5a2e6cc9315df9227907745
          set ftp:ssl-force true
          set ftp:ssl-protect-data true
          set ssl:verify-certificate no
          
<<<<<<< HEAD
          # Connection parameters
          set net:timeout 90
          set net:max-retries 3
          set ftp:passive-mode on
          
          # Connect
          open -u "${FTP_USERNAME}","${FTP_PASSWORD}" ${FTP_SERVER}
          
          # Create and navigate to directory
=======
          # Connection settings
          set net:timeout 90
          set net:max-retries 5
          set net:reconnect-interval-base 5
          set ftp:passive-mode on
          
          # Debug verbosity
          debug 4
          
          # Open connection with explicit URL format
          open ftp://${FTP_USERNAME}:${FTP_PASSWORD}@${FTP_SERVER}
          
          # Show working directory to verify connection
          pwd
          
          # Change to remote directory - create if it doesn't exist
>>>>>>> 2a868df12a1d9c37a5a2e6cc9315df9227907745
          mkdir -p ${REMOTE_DIR}
          cd ${REMOTE_DIR}
          
          # Upload files
          mirror --reverse --delete --verbose ./build/ .
          
          # Exit
<<<<<<< HEAD
          bye
          EOF
          
          # Run FTPS script
          lftp -f ftps_script.txt
          
          # Clean up
          rm -f ftps_script.txt
        continue-on-error: true
        
      # ===== FALLBACK NOTIFICATION =====
      - name: Deployment Status Check
        if: ${{ failure() }}
        run: |
          echo "::warning::Deployment failed. Please check these CyberFolks specific requirements:"
          echo "1. Foreign IP blocks: Verify that foreign IP access is enabled in your DirectAdmin panel"
          echo "2. Username format: For main account use hosting panel login, for additional accounts use format accountname@domain"
          echo "3. Try manually using FileZilla first to confirm your credentials work"
          echo "4. Contact CyberFolks support to ask about GitHub Actions deployment options"
=======
          bye"
          
          # Clean up
          rm -f ~/.netrc
>>>>>>> 2a868df12a1d9c37a5a2e6cc9315df9227907745
