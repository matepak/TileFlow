name: Deploy to CyberFolks via FTPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        continue-on-error: true
        
      - name: Build project
        run: npm run build
        
      - name: Install lftp
        run: sudo apt-get install -y lftp
        
      - name: Deploy via FTPS
        env:
          FTP_USERNAME: ${{ secrets.CYBERFOLKS_FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.CYBERFOLKS_FTP_PASSWORD }}
          FTP_SERVER: s113.cyber-folks.pl
          REMOTE_DIR: /domains/webgrove.pl/public_html/apps/tiling_img/
        run: |
          # Create a .netrc file for authentication
          echo "machine ${FTP_SERVER}" > ~/.netrc
          echo "login ${FTP_USERNAME}" >> ~/.netrc
          echo "password ${FTP_PASSWORD}" >> ~/.netrc
          chmod 600 ~/.netrc
          
          # Try different connection method (using direct lftp command)
          lftp -d -e "
          # TLS settings
          set ftp:ssl-force true
          set ftp:ssl-protect-data true
          set ssl:verify-certificate no
          
          # Connection settings
          set net:timeout 90
          set net:max-retries 5
          set net:reconnect-interval-base 5
          set ftp:passive-mode on
          
          # Debug verbosity
          debug 4
          
          # Open connection with explicit URL format
          open ftp://${FTP_USERNAME}:${FTP_PASSWORD}@${FTP_SERVER}
          
          # Show working directory to verify connection
          pwd
          
          # Change to remote directory - create if it doesn't exist
          mkdir -p ${REMOTE_DIR}
          cd ${REMOTE_DIR}
          
          # Upload files
          mirror --reverse --delete --verbose ./build/ .
          
          # Exit
          bye"
          
          # Clean up
          rm -f ~/.netrc